{"version":3,"sources":["components/Filter.js","models/Person.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/records.js","App.js","index.js"],"names":["Filter","searchText","onChange","value","Person","this","id","name","number","person","toLowerCase","json","Object","assign","PersonForm","onSubmit","handleInputChange","event","newPerson","from","target","type","onDelete","onClick","Persons","persons","filter","includes","map","Notification","message","className","text","baseUrl","axios","get","then","response","data","personJson","post","put","delete","App","useState","setPersons","setSearchText","setNewPerson","setMessage","messageTime","useEffect","recordsService","resetPerson","handleUpdateRecord","p","setTimeout","catch","preventDefault","length","i","equals","window","confirm","handleNewRecord","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ac175fe.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({searchText, onChange}) => {\n    return (\n        <>\n            filter shown with: <input value={searchText} onChange={onChange}/>\n        </>\n    );\n};\n\nexport default Filter;","class Person {\n    constructor() {\n        this.id = 0;\n        this.name = '';\n        this.number = '';\n    }\n\n    static from(json) {\n        return Object.assign(new Person(), json);\n    }\n\n    equals(person) {\n        return this.id === person.id || this.name.toLowerCase() === person.name.toLowerCase();\n    }\n}\n\nexport default Person;","import React from 'react';\nimport Person from '../models/Person';\n\nconst PersonForm = ({onSubmit, onChange, person}) => {\n    const handleInputChange = event => {\n        const newPerson = Person.from(person);\n        newPerson[event.target.name] = event.target.value;\n        onChange(newPerson);\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n                name: <input name=\"name\" value={person.name} onChange={handleInputChange}/>\n            </div>\n            <div>\n                number: <input name=\"number\" value={person.number} onChange={handleInputChange}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n};\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({person, onDelete}) => {\n    return (\n        <>\n            <li>\n                {person.name} {person.number}&nbsp;\n                <button onClick={onDelete}>delete</button>\n            </li>\n        </>\n    );\n};\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({persons, searchText, onDelete}) => {\n    return (\n        <ul>\n            {persons.filter(person => person.name.toLowerCase().includes(searchText)).map(person => {\n                return <Person key={person.name} person={person} onDelete={() => onDelete(person)}/>;\n            })}\n        </ul>\n    );\n};\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ({message}) => {\n    if (message == null) {\n        return <div/>;\n    }\n\n    return <div className={`notification notification--${message.type}`}>{message.text}</div>;\n};\n\nexport default Notification;","import axios from 'axios';\nimport Person from '../models/Person';\n\nconst baseUrl = '/api/persons';\n\n/**\n *\n * @returns {Promise}\n */\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data.map(personJson => Person.from(personJson)));\n};\n\n/**\n *\n * @param {Person} person\n * @returns {Promise}\n */\nconst create = person => {\n    delete person.id;\n    return axios.post(baseUrl, person);\n};\n\n/**\n *\n * @param {Person} person\n * @returns {Promise}\n */\nconst remove = person => {\n    return axios.delete(`${baseUrl}/${person.id}`);\n};\n\n/**\n *\n * @param {Person} person\n * @returns {Promise}\n */\nconst update = person => {\n    return axios.put(`${baseUrl}/${person.id}`, person);\n};\n\nexport default {getAll, create, update, remove};","import React, {useState, useEffect} from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport Person from './models/Person';\nimport recordsService from './services/records';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [searchText, setSearchText] = useState('');\n    const [newPerson, setNewPerson] = useState(new Person());\n    const [message, setMessage] = useState(null);\n    const messageTime = 3000;\n\n    useEffect(() => {\n        recordsService.getAll().then(response => setPersons(response));\n    }, []);\n\n    /**\n     * Resets the current person\n     */\n    const resetPerson = () => setNewPerson(new Person());\n\n    /**\n     * Handle addition of a new person record\n     * @param {Person} person The person to add\n     */\n    const handleNewRecord = person => {\n        if (person.name.length === 0) {\n            return;\n        }\n\n        for (let i = 0; i < persons.length; i++) {\n            if (person.equals(persons[i])) {\n                person.id = persons[i].id;\n\n                if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n                    handleUpdateRecord(person);\n                }\n\n                return;\n            }\n        }\n\n        recordsService.create(person).then(response => {\n            setPersons([...persons, Person.from(response.data)]);\n            resetPerson();\n            setMessage({type: 'success', text: `Added ${person.name}`});\n            setTimeout(() => {\n                setMessage(null);\n            }, messageTime);\n        }).catch(() => {\n            setMessage({type: 'error', text: `An error occurred`});\n            setTimeout(() => {\n                setMessage(null);\n            }, messageTime);\n        });\n    };\n\n    /**\n     * Handle deletion of a person record\n     * @param {Person} person\n     */\n    const handleDeleteRecord = person => {\n        if (!window.confirm(`Delete ${person.name}?`)) {\n            return;\n        }\n\n        recordsService.remove(person).then(response => {\n            setPersons(persons.filter(p => !p.equals(person)));\n            setMessage({type: 'success', text: `Removed ${person.name}`});\n            setTimeout(() => {\n                setMessage(null);\n            }, messageTime);\n        }).catch(() => {\n            setMessage({type: 'error', text: `${person.name} was already removed from the server`});\n            setTimeout(() => {\n                setMessage(null);\n            }, messageTime);\n            setPersons(persons.filter(p => p.id !== person.id));\n        });\n    };\n\n    /**\n     * Handle updating a person record\n     * @param {Person} person\n     */\n    const handleUpdateRecord = person => {\n        recordsService.update(person).then(() => {\n            setPersons(persons.map(p => p.id === person.id ? person : p));\n            resetPerson();\n            setMessage({type: 'success', text: `Updated ${person.name}`});\n            setTimeout(() => {\n                setMessage(null);\n            }, messageTime);\n        }).catch(() => {\n            setMessage({type: 'error', text: `Information of ${person.name} has already been removed from the server`});\n            setTimeout(() => {\n                setMessage(null);\n            }, messageTime);\n            setPersons(persons.filter(p => p.id !== person.id));\n        });\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message}/>\n            <Filter text={searchText} onChange={event => {\n                setSearchText(event.target.value);\n            }}/>\n            <h2>Add a new</h2>\n            <PersonForm onSubmit={event => {\n                event.preventDefault();\n                handleNewRecord(newPerson);\n            }} onChange={person => {\n                setNewPerson(person);\n            }} person={newPerson}/>\n            <h2>Numbers</h2>\n            <Persons persons={persons} searchText={searchText} onDelete={handleDeleteRecord}/>\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}